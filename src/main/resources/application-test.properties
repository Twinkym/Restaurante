# ========================================================
# ===== CONFIGURACIÓN PARA ENTORNO DE PRUEBAS (TEST) =====
# ========================================================

# Puerto aleatorio para evitar conflictos
server.port=0

# -----------------------------------------
# ----- BASE DE DATOS EN MEMORIA (H2) -----
# -----------------------------------------
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Reiniciar BD en cada test
spring.jpa.hibernate.ddl-auto=create-drop

# Usar esquema y datos de test (opcional)
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Mostrar SQL para debugging de test
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ---------------------------------------
# ----- DESACTIVAR CACHE EN PRUEBAS -----
# ---------------------------------------
spring.thymeleaf.cache=false

# ------------------------------------------------
# ----- CONFIGURACIÓN SMTP PARA ENVIAR EMAILS ----
# ------------------------------------------------
# src/main/resources/application.properties

# --- Configuración SMTP para el envío de correos ...
# ¡IMPORTANTE!: Reemplazar estos valores con la configuración real del servidor SMTP.
# Si se utiliza Gmail, se necesitará generar una "contraseña de aplicación" o
# (NO RECOMENDABLE: permitir aplicaciones menos seguras.
#
# Servidor SMTP (ej: smtp.gmail.com para Gmail, smtp.office365.com para outlook/office 365)
spring.mail.host=smtp_host.com
# Puerto SMTP (ej.: 587 para TLS, 465 para SSL)
spring.mail.port=587
# Nombre de usuario de lal cuenta de correo
spring.mail.username=restaurante@example.com
# Contraseña de la cuenta de correo (o contraseña de aplicación para Gmail)
spring.mail.password=la contraseña del email
# Habilitar autenticación SMTP
spring.mail.properties.mail.starttls.enable=true
# Valor de tiempo de espera para la conexión (en milisegundos)
spring.mail.properties.mail.smtp.connection-timeout=5000
# Valor de espera para el envío (en milisegundos)
spring.mail.properties.mail.smtp.timeout=5000
# Valor de tiempo de espera para la lectura (en milisegundos)
spring.mail.properties.mail.smtp.write-timeout=5000
# ¡Deshabilitar la verificación de host SSL (solo para desarrollo si se tienen problemas con certificados, NUNCA EN PRODUCCiÓN!!!!
# spring.mail.properties.mail.smtp.ssl.trust=smtp_host.com