# =====================================================
# == CONFIGURACIÓN PARA ENTORNO DE PRODUCCIÓN (PROD) ==
# =====================================================

# Puerto del servidor para el despliegue en producción
server.port=80

# Configuración de la base de datos de PRODUCCIÓN (usar variables de entorno o .env seguro)
# usará otros datos, esto es mejor cambiarlo por las dos últimas líneas.
# spring.datasource.url=jdbc:mysql://servidor-remoto.com:3306/nombre_bd_prod
# spring.datasource.username=usuario_prod
# spring.datasource.password=LA_CONTRASEÑA_SEGURA_DE_PRODUCCIÓN
# conexión mejorada por seguridad esto es en caso de usar spring-boot-starter-security.

# ---- LA CONFIGURACIÓN SEGURA PARA PRODUCCIÓN ----
# Válida que el esquema de la BD coincida con las entidades. No modifica nada.
# Los cambios en producción se gestionan con herramientas de migración (ej. Flyway).
# Validación estricta del esquema (no crea ni modifica).
spring.jpa.hibernate.ddl-auto=validate

# No se recomienda mostrar SQL en producción por rendimiento y seguridad
# Ocultar sentencias SQL en consola/logs por seguridad y rendimiento.
spring.jpa.show-sql=false

# Activar la caché de Thymeleaf en producción para mejor rendimiento
# (puede ser sobreescrito por línea de comandos).
spring.thymeleaf.cache=true

# Configuración de logs. Evitar mostrar logs DEBUG O TRACE innecesarios.
# Y redirigir los logs a un archivo (mejor que consola en producción)
# Login básico
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.file.name=logs/app-prod.log

# Configuración de conexión HikariCP (ajustable)
# Con estos atributos creo que se configuran los tiempos de conexión del servidor o algo asi.
# lo del tamaño del pool tengo que mirarlo.
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
